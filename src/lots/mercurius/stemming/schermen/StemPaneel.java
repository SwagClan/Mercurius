/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lots.mercurius.stemming.schermen;

import java.awt.BorderLayout;
import java.sql.ResultSet;
import java.sql.SQLException;
import lots.mercurius.stemming.Main;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author joris
 */
public class StemPaneel extends javax.swing.JPanel {

    private final Main main;
    private final ArrayList<OpkomendePaneel> opkomende = new ArrayList<>();

    public final int praeses = 18, proSenior = 19, honorescousa = 20;

    /**
     * Creates new form StemPaneel
     *
     * @param main man variable
     */
    public StemPaneel(Main main) {
        initComponents();
        jPanel1.setLayout(new BorderLayout());
        this.main = main;

    }

    public void addOpkomende(String voornaamEnNaam, int funcid, int stemmenvoor, int stemmentegen, int lid_id) {
        OpkomendePaneel opkomende2 = new OpkomendePaneel(main, this);
        opkomende2.setOpkomendeNaam(voornaamEnNaam);
        boolean praeses2 = false, proSenior2 = false, honorescousa2 = false;
        if (this.praeses == funcid) {
            praeses2 = true;
        } else if (funcid == this.proSenior) {
            proSenior2 = true;
        } else if (funcid == this.honorescousa) {
            honorescousa2 = true;
        }
        opkomende2.setKomtAl(praeses2, proSenior2, honorescousa2);
        opkomende2.setLid_id(lid_id);
        this.opkomende.add(opkomende2);
        plaatsPannels();
    }

    private void plaatsPannels() {
        jPanel1.removeAll();
        switch (opkomende.size()) {
            case 5:
                jPanel1.add(opkomende.get(4), BorderLayout.SOUTH);
            case 4:
                jPanel1.add(opkomende.get(3), BorderLayout.NORTH);
            case 3:
                jPanel1.add(opkomende.get(2), BorderLayout.WEST);
            case 2:
                jPanel1.add(opkomende.get(1), BorderLayout.EAST);
            case 1:
                jPanel1.add(opkomende.get(0), BorderLayout.CENTER);
                break;
        }
        jPanel1.updateUI();
        this.updateUI();
    }

    public ArrayList<OpkomendePaneel> getOpkoomende() {
        return opkomende;
    }

    public void setSubmitEnabled(boolean flag) {
        if (flag) {
            boolean check = true;
            for (OpkomendePaneel p : opkomende) {
                if (!p.getGestemd()) {
                    check = false;
                    break;
                }
            }
            if (check) {
                submit.setEnabled(true);
            } else {
                setSubmitEnabled(false);
            }
        } else {
            submit.setEnabled(flag);
        }
    }

    public void begin() {
        this.opkomende.clear();
        setSubmitEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        submit = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );

        submit.setText("Submit");
        submit.setEnabled(false);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submit)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // gaat de aangeduiden chit opslaan
        submit.setEnabled(false);
        int check = JOptionPane.showConfirmDialog(this, "Ben je zeker van je keuze", "BEVESTIG JE KEUZE", JOptionPane.YES_NO_OPTION);
        System.out.println("lots.mercurius.schermen.StemPaneel.submitActionPerformed() " + check);
        if (check == 1) {
            submit.setEnabled(true);
        } else {
            for (int i = 0; i < opkomende.size(); i++) {
                OpkomendePaneel p = opkomende.get(i);
                try {
                    String sql = "SELECT * FROM komtop WHERE lid_id= '" + p.getLid_id() + "';";
                    main.getSQLhandler().maakConnectie();
                    ResultSet rs = main.getSQLhandler().voerQryUit(sql);
                    rs.beforeFirst();
                    rs.next();
                    if (p.getGestemd()) {
                        if (p.isStemvoor()) {
                            if (main.getIngelogdPersoon().getRechten() >= 5) {
                                rs.updateInt("stemmen_voor", rs.getInt("stemmen_voor") + 2);
                            } else {
                                rs.updateInt("stemmen_voor", rs.getInt("stemmen_voor") + 1);
                            }
                        } else if (main.getIngelogdPersoon().getRechten() >= 5) {
                            rs.updateInt("stemmen_tegen", rs.getInt("stemmen_tegen") + 2);
                        } else {
                            rs.updateInt("stemmen_tegen", rs.getInt("stemmen_tegen") + 1);
                        }

                    }
                    rs.updateRow();
                    rs.close();
                    main.getSQLhandler().sluitConnectie();
                    sql = "SELECT * FROM gestemd";
                    main.getSQLhandler().maakConnectie();
                    rs = main.getSQLhandler().voerQryUit(sql);
                    rs.moveToInsertRow();
                    rs.updateInt("lid_id", main.getIngelogdPersoon().getLid_id());
                    rs.updateBoolean("getemd", true);
                    rs.updateDate("jaar", new java.sql.Date(main.getDay().getTimeInMillis()));
                    rs.insertRow();
                    rs.close();
                    main.getSQLhandler().sluitConnectie();
                    JOptionPane.showMessageDialog(this, "Beadankt voor u stem", "BEDANKT", JOptionPane.INFORMATION_MESSAGE);
                    main.begin();
                } catch (SQLException ex) {
                    Logger.getLogger(StemPaneel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_submitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

    void dezePreases(OpkomendePaneel aThis) {
        for (OpkomendePaneel p : opkomende) {
            if (!aThis.equals(p)) {
                p.setStemvoorPreases(false);
            }
        }
    }

    void dezeProSenior(OpkomendePaneel aThis) {
        for (OpkomendePaneel p : opkomende) {
            if (!aThis.equals(p)) {
                p.setStemvoorProSenior(false);
            }
        }
    }

    void dezeProSeniorHonorescousa(OpkomendePaneel aThis) {
        for (OpkomendePaneel p : opkomende) {
            if (!aThis.equals(p)) {
                p.setStemVoorProSeniorHonorascousa(false);
            }
        }
    }
}
