/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lots.mercurius.stemming;

import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Locale;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import lots.mercurius.stemming.sqlHandler.SQLhandler;
import lots.mercurius.stemming.fileHandler.FileHandler;
import lots.mercurius.stemming.schermen.BeginScherm;
import lots.mercurius.stemming.schermen.OpkomendePaneel;
import lots.mercurius.stemming.schermen.StemPaneel;
import lots.mercurius.stemming.updater.Update;

/**
 *
 * @author joris
 */
public class Main extends javax.swing.JFrame {

    private BeginScherm beginScherm = new BeginScherm(this);
    private StemPaneel stemPaneel = new StemPaneel(this);

    private FileHandler fileHandler = new FileHandler(this);
    private Update update = new Update();
    private SQLhandler SQLhandler = new SQLhandler(this);
    private IngelogdPersoon ingelogdPersoon = new IngelogdPersoon(this);
    private Calendar day = Calendar.getInstance(TimeZone.getTimeZone("Europe/Brussels"), new Locale("dutch"));
    public static final String VERSION = "0:0:0";

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        jPanel1.setLayout(new BorderLayout());
        fileHandler.redfile();
        checkForUpdates();
        begin();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("mercurius.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mercurius");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 830, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 464, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void begin() {
        //allas begin
        this.beginScherm.begin();
        this.ingelogdPersoon = new IngelogdPersoon(this);
        for (OpkomendePaneel p : stemPaneel.getOpkoomende()) {
            p.begin();
        }
        this.stemPaneel.begin();
        //zet begin scherm
        beginScherm = new BeginScherm(this);
        setScreen(beginScherm);
        ingelogdPersoon = new IngelogdPersoon(this);
        //screen refrech
        jPanel1.updateUI();
    }

    private void setScreen(JPanel p) {
        jPanel1.removeAll();
        jPanel1.add(p);
        pack();
        jPanel1.updateUI();
    }

    private void checkForUpdates() {
        //check for updates
        update.CheckForUpdates(this);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public SQLhandler getSQLhandler() {
        return SQLhandler;
    }

    public StemPaneel getStemPaneel() {
        return stemPaneel;
    }

    public IngelogdPersoon getIngelogdPersoon() {
        return ingelogdPersoon;
    }

    public void setIngelogPersoon(IngelogdPersoon p) {
        ingelogdPersoon = p;
    }

    public void userLogin(BeginScherm aThis) {
        if (SQLhandler.isUserOk(aThis)) {
            //ok
            setScreen(stemPaneel);
            haalOpkomendeOp(stemPaneel);
            for (OpkomendePaneel p : stemPaneel.getOpkoomende()) {
                if (ingelogdPersoon.getRechten() < 2) {
                    p.setKunnenStemmen(true, false, false);
                } else {
                    p.setKunnenStemmen(true, true, true);
                }
            }
            //checken of ie al getemd heefd
            if (checkGetemd(ingelogdPersoon.getLid_id())) {
                return;
            }            
            //vanaf submit dierect weg schrijven naar de db
        } else {
            JOptionPane.showMessageDialog(this, "Foute Ingave Probeer Opniuw", "Login Error", JOptionPane.WARNING_MESSAGE);
            begin();
        }
    }

    private void haalOpkomendeOp(StemPaneel stemPaneel) {
        try {
            SQLhandler sql1, sql2;
            sql1 = new SQLhandler(this);
            sql2 = new SQLhandler(this);
            String opkomende = "SELECT * FROM komtop";
            sql1.maakConnectie();
            ResultSet rs = sql1.voerQryUit(opkomende);
            rs.beforeFirst();
            while (rs.next()) {
                int lid_id, func_id, stemmenVoor, stemmenTegen;
                lid_id = rs.getInt("lid_id");
                func_id = rs.getInt("func_id");
                stemmenVoor = rs.getInt("stemmen_voor");
                stemmenTegen = rs.getInt("stemmen_tegen");
                String lid = "SELECT * FROM leden WHERE lid_id='" + lid_id + "';";
                sql2.maakConnectie();
                ResultSet rs2 = sql2.voerQryUit(lid);
                rs2.beforeFirst();
                rs2.next();
                String naam = rs2.getString("lid_voornaam") + " " + rs2.getString("lid_naam");
                rs2.close();
                sql2.sluitConnectie();
                stemPaneel.addOpkomende(naam, func_id, stemmenVoor, stemmenTegen, lid_id);
            }
            rs.close();
            sql1.sluitConnectie();
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkGetemd(int lid_id) {
        try {
            String sql
                    = "SELECT * FROM gestemd WHERE lid_id= '" + ingelogdPersoon.getLid_id() + "' AND jaar LIKE '" + day.get(Calendar.YEAR)+ "%';";
            System.out.println("lots.mercurius.Main.checkGetemd()"+ day.get(Calendar.YEAR));
            SQLhandler.maakConnectie();
            ResultSet rs = SQLhandler.voerQryUit(sql);
            System.out.println("lots.mercurius.Main.checkGetemd()" + rs);
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "U heeft al gestemd", "WARNING", JOptionPane.WARNING_MESSAGE);
                begin();
                return true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            SQLhandler.sluitConnectie();
        }
        return true;
    }
    
    public Calendar getDay(){
        return day;
    }
}
